# phpbrew zsh completion script generated by CLIFramework
# Web: http://github.com/c9s/php-CLIFramework
# THIS IS AN AUTO-GENERATED FILE, PLEASE DON'T MODIFY THIS FILE DIRECTLY.
___phpbrew_meta () {
  local curcontext=$curcontext state line ret=1
  declare -A opt_args
  declare -a lines
  declare -a args
  local ret=1
  local desc=$1
  local cmdsig=$2
  local valtype=$3
  local pos=$4
  local completion=$5
  lines=("${(@f)$(phpbrew _meta $cmdsig $valtype $pos $completion)}")
  if [[ $lines[1] == "#values" ]] ; then
      args=(${lines:1})
     _values "$desc" ${=args} && ret=0
  elif [[ $lines[1] == "#descriptions" ]] ; then
      args=(${lines:1})
      _describe "$desc" args && ret=0
  else
     _values "$desc" ${=lines} && ret=0
  fi
  return ret
}
_phpbrew() {
local curcontext=$curcontext state line
typeset -A opt_args
local ret=1
  _arguments -C \
    '(-v --verbose)'{-v,--verbose}'[Print verbose message.]' \
    '(-d --debug)'{-d,--debug}'[Print debug message.]' \
    '(-q --quiet)'{-q,--quiet}'[Be quiet.]' \
    '(-h --help)'{-h,--help}'[help]' \
    '--version[show version]' \
    ': :->cmds' \
    '*:: :->option-or-argument' \
     && return
  case $state in
    (cmds)
  local commands; commands=(
    'help:Show help message of a command'
    'init:Initialize phpbrew config file.'
    'known:list known PHP versions'
    'install:install php'
    'list:list installed PHP versions'
    'use:use php, switch version temporarily'
    'switch:switch default php version.'
    'info:show current php information'
    'env:export environment variables'
    'ext:List extensions or execute extension subcommands'
    'variants:list php variants'
    'path:Show paths of the current PHP.'
    'cd:Change to directories'
    'download:download php'
    'clean:clean up php distribution'
    'ctags:Run ctags at current php source dir for extension development.'
    'enable:This command is migrated'
    'install-ext:This command is migrated'
    'self-update:self-update, default to master version'
    'remove:remove installed php version.'
    'purge:remove installed php version and config files.'
    'off:temporarily go back to the system php'
    'switch-off:definitely go back to the system php'
  )
  _describe -t commands 'command' commands && ret=0
    ;;
    (option-or-argument)
      curcontext=${curcontext%:*}-$line[1]:
      case $line[1] in
        (help)
        
        ;;
        (init)
            _arguments -w -S -s \
              '(-c --config)'{-c,--config=}'[The config file which should be used.]' \
               && ret=0
        
        ;;
        (known)
            _arguments -w -S -s \
              '--more[show more older versions]' \
              '--svn[list subversion phps]' \
              '--old[list old phps (less than 5.3)]' \
              '--stas[list stas phps]' \
              '--dsp[list dsp phps]' \
              '--tyrael[list tyrael phps]' \
               && ret=0
        
        ;;
        (install)
            _arguments -w -S -s \
              '--test[run tests]' \
              '--name=[prefix name]' \
              '--clean[Run make clean before building.]' \
              '--post-clean[Run make clean after building PHP.]' \
              '--production[Use production configuration]' \
              '(-n --nice)'{-n,--nice=}'[process nice level]' \
              '--patch=[apply patch before build]:file:_files' \
              '--old[install old phps (less than 5.3)]' \
              '(-f --force)'{-f,--force}'[force]' \
              '(-d --dryrun)'{-d,--dryrun}'[dryrun]' \
              '--like=[inherit variants from previous build]' \
              '(-j --make-jobs)'{-j,--make-jobs=}'[Specifies the number of jobs to run simultaneously (make -jN).]' \
              ':version:(5.3 5.4 5.5)' \
              '*:variants:{___phpbrew_meta "variants" install arg 1 suggestions}' \
               && ret=0
        
        ;;
        (list)
        
        ;;
        (use)
            _arguments -w -S -s \
              ':installed php:{___phpbrew_meta "installed php" use arg 0 valid-values}' \
               && ret=0
        
        ;;
        (switch)
            _arguments -w -S -s \
              ':installed php:{___phpbrew_meta "installed php" switch arg 0 valid-values}' \
               && ret=0
        
        ;;
        (info)
        
        ;;
        (env)
            _arguments -w -S -s \
              ':version' \
               && ret=0
        
        ;;
        (ext)
            _arguments -C \
              '(-v --php)'{-v,--php=}'[The php version for which we install the module.]' \
              ': :->cmds' \
              '*:: :->option-or-argument' \
               && return
            case $state in
              (cmds)
            local commands; commands=(
              'enable:Enable PHP extension'
              'install:Install PHP extension'
            )
            _describe -t commands 'command' commands && ret=0
              ;;
              (option-or-argument)
                curcontext=${curcontext%:*}-$line[1]:
                case $line[1] in
                  (enable)
                        _arguments -w -S -s \
                          ':extName' \
                           && ret=0
                  
                  ;;
                  (install)
                        _arguments -w -S -s \
                          '(-pv --php-version)'{-pv,--php-version=}'[The php version for which we install the module.]' \
                          ':extensions:{___phpbrew_meta "extensions" ext.install arg 0 suggestions}' \
                           && ret=0
                  
                  ;;
                esac
                ;;
              esac
        
        ;;
        (variants)
            _arguments -w -S -s \
              ':version' \
               && ret=0
        
        ;;
        (path)
            _arguments -w -S -s \
              ':name' \
               && ret=0
        
        ;;
        (cd)
            _arguments -w -S -s \
              ':directory:(var etc build dist)' \
               && ret=0
        
        ;;
        (download)
            _arguments -w -S -s \
              '(-f --force)'{-f,--force}'[Force extraction]' \
              '--old[enable old phps (less than 5.3)]' \
              ':php version:(5.3 5.4 5.5)' \
               && ret=0
        
        ;;
        (clean)
            _arguments -w -S -s \
              ':installed php:{___phpbrew_meta "installed php" clean arg 0 valid-values}' \
               && ret=0
        
        ;;
        (ctags)
        
        ;;
        (enable)
        
        ;;
        (install-ext)
        
        ;;
        (self-update)
            _arguments -w -S -s \
              ':branch' \
               && ret=0
        
        ;;
        (remove)
            _arguments -w -S -s \
              ':installed php:{___phpbrew_meta "installed php" remove arg 0 valid-values}' \
               && ret=0
        
        ;;
        (purge)
            _arguments -w -S -s \
              ':installed php:{___phpbrew_meta "installed php" purge arg 0 valid-values}' \
               && ret=0
        
        ;;
        (off)
            _arguments -w -S -s \
              ':version' \
               && ret=0
        
        ;;
        (switch-off)
            _arguments -w -S -s \
              ':version' \
               && ret=0
        
        ;;
      esac
      ;;
    esac

return ret
}
compdef _phpbrew phpbrew
